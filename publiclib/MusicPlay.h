/************************************
*comment:音频播放
*auth:lihuixiong
*date:2016.08.23
*************************************/

#ifndef __MUSICPLAY__
#define __MUSICPLAY__


/****************************************************************************
| 注册窗口句柄后可获得播放状态的消息										|
| MM_MCINOTIFY：															|
| MCI_NOTIFY_SUCCESSFUL----播放完成消息										|
****************************************************************************/

#pragma once
#include "mmsystem.h"
#include "ThreadEx.h"
#include "AutoLock.h"
#include "def.h"
#include <list>
#pragma comment(lib,"winmm.lib")
using namespace std;

typedef list<int> LIST_TASK;

class EXPORT_FUNCTION IMusicPlayEventHandler
{
public:
	virtual ~IMusicPlayEventHandler() {}
	/****************************************************************************
	| 函数功能：播放时间回调（默认200ms回调一次，可通过SetTimePostion设置间隔） |
	| 输入参数：dwPos ：播放进度				                                |
	| 输出参数：无                                                              |
	| 返 回 值：无					                                            |
	| 说    明：					                                            |
	****************************************************************************/
	virtual void OnTimePostion(DWORD dwPos) {}

	/****************************************************************************
	| 函数功能：错误信息回调												    |
	| 输入参数：nErrCode ：错误码				                                |
	|			strErrInfo ：具体错误信息		                                |
	| 输出参数：无                                                              |
	| 返 回 值：无					                                            |
	| 说    明：					                                            |
	****************************************************************************/
	virtual void OnGetErrorCode(int nErrCode, CString strErrInfo, LPCSTR func) {}
};

class EXPORT_FUNCTION CMusicPlay : public ThreadEx
{
public:
	CMusicPlay();
	~CMusicPlay();

public:
	/****************************************************************************
	| 函数功能：界面调用此函数设置获取播放状态消息的窗口句柄                    |
	| 输入参数：hNotifyWindow ：接收消息的窗口句柄                              |
	|		    pIMusicPlay ：实现接口的类		                                |
	| 输出参数：无                                                              |
	| 返 回 值：无					                                            |
	| 说    明：					                                            |
	****************************************************************************/
	void setNotifyHwnd(HWND hNotifyWindow, IMusicPlayEventHandler* pIMusicPlay);

	/****************************************************************************
	| 函数功能：打开并分析新的音频文件                                          |
	| 输入参数：strFile ：文件路径                                              |
	| 输出参数：无                                                              |
	| 返 回 值：无					                                            |
	| 说    明：					                                            |
	****************************************************************************/
	void OpenFile(CString strFile);

	/****************************************************************************
	| 函数功能：播放指定的文件                                                  |
	| 输入参数：无				                                                |
	| 输出参数：无                                                              |
	| 返 回 值：无					                                            |
	| 说    明：停止当前播放，播放指定文件                                      |
	****************************************************************************/
	void Play();

	/****************************************************************************
	| 函数功能：暂停当前播放                                                    |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：无						                                        |
	| 说    明：                                                                |
	****************************************************************************/
	void Pause();

	/****************************************************************************
	| 函数功能：继续当前播放                                                    |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：无						                                        |
	| 说    明：                                                                |
	****************************************************************************/
	void Resume();

	/****************************************************************************
	| 函数功能：停止当前播放                                                    |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：无						                                        |
	| 说    明：                                                                |
	****************************************************************************/
	void Stop();

	/****************************************************************************
	| 函数功能：跳转到指定时间位置进行播放                                      |
	| 输入参数：dwTime ：指定的时间位置(单位：ms)                               |
	| 输出参数：无                                                              |
	| 返 回 值：无                                                              |
	| 说    明：                                                                |
	****************************************************************************/
	void PlayFrom(DWORD dwTime);

	/****************************************************************************
	| 函数功能：获取播放的状态                                                  |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：播放的状态                                                      |
	| 说    明：                                                                |
	****************************************************************************/
	int GetStatus();

	/****************************************************************************
	| 函数功能：获取当前播放的音频文件路径                                      |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：文件路径的指针                                                  |
	| 说    明：                                                                |
	****************************************************************************/
	CString GetMusicPath();

	/****************************************************************************
	| 函数功能：获取当前音频文件总的播放时间                                    |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：总时间（单位：ms）                                              |
	| 说    明：                                                                |
	****************************************************************************/
	DWORD GetTotalTime();

	/****************************************************************************
	| 函数功能：设置当前音频文件播放进度的回调频率                              |
	| 输入参数：nInterval ：每隔nInterval（单位：ms）回调一次                   |
	| 输出参数：无                                                              |
	| 返 回 值：无					                                            |
	| 说    明：                                                                |
	****************************************************************************/
	void SetTimePostionInterval(int nInterval);

	/****************************************************************************
	| 函数功能：获取当前音频文件的播放进度										|
	| 输入参数：无																|
	| 输出参数：无                                                              |
	| 返 回 值：当前播放进度（单位：ms）                                        |
	| 说    明：                                                                |
	****************************************************************************/
	DWORD GetTimePostion();

	/****************************************************************************
	| 函数功能：使用完后关闭设备			                                    |
	| 输入参数：无                                                              |
	| 输出参数：无                                                              |
	| 返 回 值：无                                                              |
	| 说    明：                                                                |
	****************************************************************************/
	void CloseFile();

protected:
	void ThreadProcMain(void);

private:
	int						m_nStatus;//播放器状态（播放、暂停、停止）
	MCIERROR				mciError;//错误码
	WORD					m_wDeviceID;//设备ID
	CString					m_strCurMusicPath;//当前音频播放路径
	HWND					m_hNotifyWindow;//通知窗口
	LIST_TASK				m_listTaskPool;//消息池
	DWORD					m_dwTotalTime;//音频总时长
	DWORD					m_dwSeekTo;//跳转至
	DWORD					m_dwCurPos;//当前播放进度(时间ms)
	CritSec					m_CritSec;//锁
	IMusicPlayEventHandler*	m_pIMusicPlay;
	int						m_nInterval;//设置回调当前播放时间间隔
	int						m_nOldTick;//记录上一次的回调时间
	BOOL					m_bStopThread;

private:
	void ThreadPaly();
	void ThreadPause();
	void ThreadStop();
	void ThreadResume();
	void ThreadSeek();
	void ThreadGetTotalTime();
	void ThreadCloseFile();
	DWORD ThreadGetTimePostion();

	void ErrorCode(int nErrCode, LPCSTR func);

private:
	typedef enum PLAYER_STATUS
	{
		MUSIC_PLAY = 0,
		MUSIC_PAUSE,
		MUSIC_STOP,
		MUSIC_RESUME,
		MUSIC_SEEK,
		MUSIC_CLOSE
	};

};

#endif